Індивідуальне завдання
1.	Модифікуйте код класу User так, щоб у методі setName виконувалася перевірка того, що довжина імені перевищує 3 символи.
2.	Додайте до класу Student метод setName, в якому буде виконуватися перевірка того, що довжина імені більше 3-х символів і менше 10 символів. Нехай цей метод використовує метод setName свого батька, щоб виконати частину перевірки.
3.	Не підглядаючи в мій код, реалізуйте такий же клас Student, що успадковує від User.
4.	Зробіть клас User, у якому будуть такі властивості лише читання: name і surname. Початкові значення цих властивостей повинні встановлюватись у конструкторі. Зробіть також гетери цих властивостей.
5.	Модифікуйте попереднє завдання так, щоб третім параметром конструктор передавалась дата народження працівника у форматі рік-місяць-день. Запишіть її у властивість birthday. Зробіть геттер для цієї властивості.
6.	Модифікуйте попереднє завдання так, щоб був приватний метод calculateAge, який параметром прийматиме дату народження, а повертатиме вік з урахуванням того, чи був уже день народження цього року, чи ні.
7.	Модифікуйте попереднє завдання так, щоб метод calculateAge викликався в конструкторі об'єкта, розраховував вік користувача та записував його в приватну властивість age. Зробіть геттер для цієї властивості.
8.	Зробіть клас Employee, який успадковуватиметься від класу User. Нехай новий клас має властивість salary, в якому зберігається зарплата працівника. Зарплата повинна передаватися четвертим параметром конструктор об'єкта. Зробіть також геттер для цієї властивості.
9.	Зробіть клас Product, у якому будуть такі характеристики: name, price.
10.	Створіть об'єкт класу Product, запишіть його у змінну $product1.
11.	Надайте значення змінної $product1 у змінну $product2. Перевірте те, що обидві змінні посилаються на той самий об'єкт.
