Індивідуальні завдання 18

1.	Зробіть клас Disk (коло), що реалізує інтерфейс Figure.
 (Interfaces\Figure.php)

2.	Не підглядаючи в мій код, реалізуйте такий же клас FiguresCollection. 
(Models\FiguresCollection.php)

3.	Додайте в клас FiguresCollection метод getTotalPerimeter, щоб знайти сумарний периметр всіх фігур.


4.	Нехай у нас дано такий інтерфейс:
<?php
interface iUser
{
public function setName($name); // встановити ім'я
public function getName(); // отримати ім'я
public function setAge($age); // встановити вік
public function getAge(); // отримати вік
}
?> 
(Interfaces\iUser.php)

Зробіть клас User, який реалізовуватиме цей інтерфейс.
1.	Зробіть інтерфейс iCube, який описуватиме фігуру Куб. Нехай ваш інтерфейс описує конструктор, що параметром приймає сторону куба, а також методи для отримання об'єму куба та площі поверхні.
2.	Зробіть клас Cube, який реалізує інтерфейс iCube.
3.	Зробіть інтерфейс iUser, який описуватиме користувача. Передбачається, що в користувача буде ім'я та вік і ці поля будуть передаватися параметрами конструктора. Нехай ваш інтерфейс задає те, що у користувача будуть гетери (але не сеттери) для імені та віку.
4.	Зробіть клас User, який реалізує інтерфейс iUser.
5.	Зробіть інтерфейс iUser із методами getName, setName, getAge, setAge.
6.	Зробіть інтерфейс iEmployee, що успадковує від інтерфейсу iUser і додає методи getSalary і setSalary.
7.	Зробіть клас Employee, який реалізує інтерфейс iEmployee.
8.	Зробіть інтерфейс Figure3d (тривимірна фігура), який матиме метод getVolume (отримати обсяг) і метод getSurfaceSquare (отримати площу поверхні).
9.	Зробіть клас Cube, який реалізовуватиме інтерфейс Figure3d.
10.	Створіть декілька об'єктів класу Quadrate, кілька об'єктів класу Rectangle та кілька об'єктів класу Cube. Запишіть їх у масив $arr у випадковому порядку.
11.	Переберіть циклом масив $arr і виведіть на екран лише площі об'єктів, що реалізують інтерфейс iFigure.
12.	Переберіть циклом масив $arr і виведіть для плоских фігур їхньої площі, а для об'ємних - площі їхньої поверхні.
13.	Зробіть так, щоб клас Rectangle також реалізовував два інтерфейси: і iFigure, і iTetragon.
14.	Зробіть інтерфейс iCircle з методами getRadius та getDiameter.
15.	Зробіть так, щоб клас Disk також реалізовував два інтерфейси: і iFigure, і iCircle
16.	Скопіюйте код мого класу Employee та код інтерфейсу iProgrammer. Не копіюйте мою заготівлю класу Programmer - не підглядаючи в мій код, реалізуйте цей клас самостійно.
17.	Зробіть клас Sphere, який реалізовуватиме інтерфейс iSphere.
